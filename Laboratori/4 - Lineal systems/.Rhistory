energy.inv = 1 / energy
energy = c(2.899, 3.484, 3.984, 4.444, 4.831, 5.376, 6.211, 7.576, 11.905, 16.667 )
st = c(367 ,311 ,295, 268, 253, 239, 220, 213, 193, 192)
sd = c(17, 9, 9, 7, 7, 6, 6, 6, 5, 5)
energy.inv = 1 / energy
var = sd^2
w = 1 / var
df = data.frame(energy.inv, st)
model.weighted = glm(formula = st ~ energy.inv, weights = w, data = df, family = 'gaussian')
model.unweight = glm(formula = st ~ energy.inv, data = df, family = 'gaussian')
plot(energy.inv, st, xlab = 'Inversa energia', ylab = 'Secció transversal')
abline(model.weighted$coefficients[1], model.weighted$coefficients[2], col = "green")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
model.weighted = glm(formula = st ~ energy.inv, weights = w, data = df, family = gaussian)
model.unweight = glm(formula = st ~ energy.inv, data = df, family = gaussian)
plot(energy.inv, st, xlab = 'Inversa energia', ylab = 'Secció transversal')
abline(model.weighted$coefficients[1], model.weighted$coefficients[2], col = "green")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
energy.inv = 1 / energy
w = 1 / sd^2
df = data.frame(energy.inv, st)
model.weighted = glm(formula = st ~ energy.inv, weights = w, data = df, family = gaussian)
model.unweight = glm(formula = st ~ energy.inv, data = df, family = gaussian)
plot(energy.inv, st, xlab = 'Inversa energia', ylab = 'Secció transversal')
abline(model.weighted$coefficients[1], model.weighted$coefficients[2], col = "green")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
plot(energy.inv, st, xlab = 'Inversa energia', ylab = 'Secció transversal')
abline(model.weighted$coefficients[1], model.weighted$coefficients[2], col = "green")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
w
energy = c(2.899, 3.484, 3.984, 4.444, 4.831, 5.376, 6.211, 7.576, 11.905, 16.667 )
st = c(367 ,311 ,295, 268, 253, 239, 220, 213, 193, 192)
sd = c(17, 9, 9, 7, 7, 6, 6, 6, 5, 5)
energy.inv = 1 / energy
w = 1 / sd^2
df = data.frame(energy.inv, st)
model.weighted = glm(formula = st ~ energy.inv, weights = w, data = df, family = gaussian)
model.unweight = glm(formula = st ~ energy.inv, data = df, family = gaussian)
plot(energy.inv, st, xlab = 'Inversa energia', ylab = 'Seccio transversal')
abline(model.weighted$coefficients[1], model.weighted$coefficients[2], col = "green")
abline(model.unweight$coefficients[1], model.unweight$coefficients[2], col = "blue")
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126), nrow = 5, byrow = TRUE)
data[,2] <- data[,2] * pi / 180
deg <- data[,1] * cos(data[,2])
ndata <- matrix(c(data[,1], deg), nrow = 5, byrow = FALSE)
phi <- matrix(c(1, 1, 1, 1, 1, deg), nrow = 5, byrow = FALSE)
sample <- data.frame(x = phi, t = data[,1])
View(sample)
View(sample)
model <- glm(t ~ x.2 + x.1 - 1, data = sample, family = gaussian)
model
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126), nrow = 5, byrow = TRUE)
deg <- data[,1] * cos(data[,2])
cos(pi)
cos(360)
cos(180)
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126), nrow = 5, byrow = TRUE)
data[,2] <- data[,2] * pi / 180
z <- data[,1] * cos(data[,2])
z
repeat(1, 5)
?repeat
?
¡
repeat?
?
¿
phi <- matrix(c(1, 1, 1, 1, 1, deg), nrow = 5, byrow = FALSE)
sample <- data.frame(x = phi, t = data[,1])
View(sample)
sample <- data.frame(phi = phi, r = data[,1])
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126), nrow = 5, byrow = TRUE)
data[,2] <- data[,2] * pi / 180
z <- data[,1] * cos(data[,2])
phi <- matrix(c(1, 1, 1, 1, 1, deg), nrow = 5, byrow = FALSE)
df <- data.frame(phi = phi, r = data[,1])
83
83
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126), nrow = 5, byrow = TRUE)
data[,2] <- data[,2] * pi / 180
z <- data[,1] * cos(data[,2])
phi <- matrix(c(1, 1, 1, 1, 1, z), nrow = 5, byrow = FALSE)
df <- data.frame(phi = phi, r = data[,1])
View(df)
View(df)
model <- glm(formula = r ~ phi.2, data = df, family = gaussian)
model
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = 5, byrow = TRUE)
library('MASS')
phi = matrix(c(1, -1, 1, 1, 1, 1, 1, 2, 4, 1, 3, 9, 1, 5, 25), nrow = 5)
MP <- ginv(phi, tol = sqrt(.Machine$double.eps))
w <- MP %*% data[,2]
plot(data, xlab = 'x', ylab = 't')
View(w)
View(w)
View(phi)
View(phi)
View(phi)
View(phi)
phi = matrix(
c(1, 1, 1, 1, 1,
-1, 1, 2, 3, 5,
1, 1, 4, 9, 25),
nrow = 5)
View(phi)
View(phi)
w <- MP * data[,2]
View(w)
View(w)
%
View(w)
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = 5, byrow = TRUE)
library('MASS')
phi = matrix(
c(1, 1, 1, 1, 1,
-1, 1, 2, 3, 5,
1, 1, 4, 9, 25),
nrow = 5)
MP <- ginv(phi, tol = sqrt(.Machine$double.eps))
w <- MP %*% data[,2]
plot(data, xlab = 'x', ylab = 't')
View(w)
View(w)
w
w[1] + w[2] * -1 + w[3] * 1
w[3] + w[2] * -1 + w[1] * 1
w[3] + w[2] * 5 + w[1] * 25
w[1] + w[2] * 5 + w[3] * 25
abline(w)
glm(formula = t ~ w, data = data)
df <- data.frame(phi = w, t = data[,2])
plot(data, xlab = 'x', ylab = 't')
glm(formula = t ~ w, data = df)
df <- data.frame(phi = MP, t = data[,2])
View(MP)
View(MP)
View(data)
View(data)
df <- data.frame(phi = t(MP), t = data[,2])
plot(data, xlab = 'x', ylab = 't')
glm(formula = t ~ w, data = df)
View(df)
View(df)
glm(formula = t ~ phi.3 + phi.2 + phi.1 - 1, data = df)
abline(model)
model <- glm(formula = t ~ phi.3 + phi.2 + phi.1 - 1, data = df)
abline(model)
df <- data.frame(phi = t(phi), t = data[,2])
plot(data, xlab = 'x', ylab = 't')
model <- glm(formula = t ~ phi.3 + phi.2 + phi.1 - 1, data = df)
abline(model)
curve(expr = w[1] + w[2]*x + w[3]*x^2)
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2)
plot(data, xlab = 'x', ylab = 't')
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE)
w[1] + w[2] * 3 + w[3] * 9
plot(data, xlab = 'x', ylab = 'y')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE)
plot(data, xlab = 'x', ylab = 'y')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE)
data <- matrix(c(1, 2, 3, 4, 5, 7.97, 10.2, 14.2, 16.0, 21.2), nrow = 5)
data <- matrix(c(1, 2, 3, 4, 5, 7.97, 10.2, 14.2, 16.0, 21.2), nrow = 5, byrow = TRUE)
View(data)
View(data)
data <- matrix(c(1, 2, 3, 4, 5, 7.97, 10.2, 14.2, 16.0, 21.2), nrow = 5, byrow = FALSE)
View(data)
View(data)
1 %*% 5
phi <- matrix(c(rep(1, 5), data[,1]), nrow = 5)
library('MASS')
MP <- ginv(phi, tol = sqrt(.Machine$double.eps))
w1 <- MP %*% data[,2]
data <- matrix(c(1, 2, 3, 4, 5, 7.97, 10.2, 14.2, 16.0, 21.2), nrow = 5, byrow = FALSE)
phi <- matrix(c(rep(1, 5), data[,1]), nrow = 5)
library('MASS')
MP <- ginv(phi, tol = sqrt(.Machine$double.eps))
w1 <- MP %*% data[,2]
w2 <- svd(x = )
w
data <- matrix(c(1, 2, 3, 4, 5, 7.97, 10.2, 14.2, 16.0, 21.2), nrow = 5, byrow = FALSE)
phi <- matrix(c(rep(1, 5), data[,1]), nrow = 5)
library('MASS')
MP <- ginv(phi, tol = sqrt(.Machine$double.eps))
w1 <- MP %*% data[,2]
w2 <- svd(phi)
w
w2
w1
w2$v %*% t(w2$v)
w2$v * t(w2$v)
w2$v %*% t(w2$v)
sv <- svd(phi)
D <- diag(sv$d)
View(D)
View(D)
pmax(c(1,2-3,4), 0)
pmax(c(1,2,-3,4), 0)
1 / C(1,2,3,4)
1 / c(1,2,3,4)
w2 <- V %*% D %*% t(U) %*% data[,2]
sv <- svd(phi)
V <- sv$v
U <- sv$u
D <- diag(pmax(1 / sv$d, 0))
w2 <- V %*% D %*% t(U) %*% data[,2]
View(w1)
View(w1)
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = 5, byrow = TRUE)
x <- data[,1]
Phi <- matrix(c(x^0, x^1, x^2), nrow = 5)
library('MASS')
MP <- ginv(Phi, tol = sqrt(.Machine$double.eps))
(w <- MP %*% data[,2])
plot(data, xlab = 'x', ylab = 'y', title('Polinomi resultat'))
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet", lwd = 2)
grid()
plot(data, xlab = 'x', ylab = 'y', title('Polinomi resultat'))
plot.new
plot.new()
plot(data, xlab = 'x', ylab = 'y', title('Polinomi resultat'))
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet", lwd = 2)
grid()
library('MASS')
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = 5, byrow = TRUE)
x <- data[,1]
t <- data[,2]
Phi <- matrix(c(x^0, x^1, x^2), nrow = 5)
MP <- ginv(Phi, tol = sqrt(.Machine$double.eps))
MP * t
MP %*% t
View(MP)
View(MP)
MP %*% t
(w <- MP %*% t)
View(w)
View(w)
N <- 5
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126),
nrow = N, byrow = TRUE)
r <- data[,1]
phi <- data[,2] * pi / 180
Phi.0 <- rep(1, N)
Phi.1 <- r * cos(phi)
Phi <- matrix(c(Phi.0, Phi.1), nrow = N, byrow = FALSE)
df <- data.frame(data = Phi, r = r)
names(df)[1:2] <- c('p', 'e')
(model <- glm(formula = r ~ e, data = df, family = gaussian))
inv(Phi)
solve(Phi)
test <- matrix(c(0, 0, 0, 0), nrow = 2)
ginv(test)
solve(test)
ginv(test)
rank(test)
?rank
range(test)
qr(test)$rank
solve(Phi)
(w <- MP %*% t)
Phi
energy = c(2.899, 3.484, 3.984, 4.444, 4.831, 5.376, 6.211, 7.576, 11.905, 16.667 )
st = c(367 ,311 ,295, 268, 253, 239, 220, 213, 193, 192)
sd = c(17, 9, 9, 7, 7, 6, 6, 6, 5, 5)
energy.inv = 1 / energy
w = 1 / sd^2
df = data.frame(energy.inv, st)
model.weighted = glm(formula = st ~ energy.inv, weights = w, data = df, family = gaussian)
model.unweight = glm(formula = st ~ energy.inv, data = df, family = gaussian)
library('MASS')
N <- 5
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = N, byrow = TRUE)
x <- data[,1]
t <- data[,2]
Phi <- matrix(c(x^0, x^1, x^2), nrow = N)
MP <- ginv(Phi, tol = sqrt(.Machine$double.eps))
(w <- MP %*% t)
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet", lwd = 2)
grid()
Phi
?polynom
y <- 450 + p*(q-10)^3
plot(q,y,type='l',col='navy',main='Nonlinear relationship',lwd=3)
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, from = -2, to = 6)
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE)
grid()
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
grid()
MP <- ginv(Phi, tol = sqrt(.Machine$double.eps))
(w <- MP %*% t)
library('MASS')
N <- 5
data <- matrix(c(-1, 2, 1, 1, 2, 1, 3, 0, 5, 3), nrow = N, byrow = TRUE)
x <- data[,1]
t <- data[,2]
Phi <- matrix(c(x^0, x^1, x^2), nrow = N)
MP <- ginv(Phi, tol = sqrt(.Machine$double.eps))
(w <- MP %*% t)
plot(data, xlab = 'x', ylab = 't')
curve(expr = w[1] + w[2]*x + w[3]*x^2, add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
grid()
Phi <- matrix(c(x^0, x^1, x^2), nrow = N)
qr(Phi)$rank
(MP <- ginv(Phi, tol = sqrt(.Machine$double.eps)))
N <- 5
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126),
nrow = N, byrow = TRUE)
r <- data[,1]
phi <- data[,2] * pi / 180
Phi.0 <- rep(1, N)
Phi.1 <- r * cos(phi)
Phi <- matrix(c(Phi.0, Phi.1), nrow = N, byrow = FALSE)
df <- data.frame(data = Phi, r = r)
names(df)[1:2] <- c('p', 'e')
(model <- glm(formula = r ~ e, data = df, family = gaussian))
Phi.1
(model <- glm(formula = r ~ e, data = df, family = gaussian))
N <- 5
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126),
nrow = N, byrow = TRUE)
r <- data[,1]
phi <- data[,2] * pi / 180
# 1*p
Phi.p <- rep(1, N)
# r*cos(phi)*e
Phi.e <- r * cos(phi)
Phi <- matrix(c(Phi.p, Phi.e), nrow = N, byrow = FALSE)
df <- data.frame(data = Phi, r = r)
names(df)[1:2] <- c('p', 'e')
# r ~ e ≡ r ~ e + p - 1
(model <- glm(formula = r ~ e, data = df, family = gaussian))
Phi
model$coefficients[1]
solve(model, 20)
p = model$coefficients[1]
e = model$coefficients[2]
p / (1 - e * cos(83))
p / (1 - e * cos(108))
p / (1 - e * cos(108 * pi / 180))
p / (1 - e * cos(108 * pi / 83))
p / (1 - e * cos(83 * pi / 180))
plot(data, xlab = 'x', ylab = 't')
abline(model)
grid()
plot(model)
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] + model$coefficients[2] * (x * pi / 180), add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
curve(expr = model$coefficients[1] + model$coefficients[2] * (x * pi / 180), add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
grid()
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] + model$coefficients[2] * (x * pi / 180), add = TRUE, col = "violet",
lwd = 2, from = -2, to = 6)
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] + model$coefficients[2] * (x * pi / 180), add = TRUE, col = "violet", lwd = 2)
grid()
curve(expr = model$coefficients[1] + model$coefficients[2] * x, add = TRUE, col = "violet",lwd = 2)
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] + model$coefficients[2] * x, add = TRUE, col = "violet",lwd = 2)
grid()
curve(expr = model$coefficients[1] + model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
curve(expr = model$coefficients[1] + model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
curve(expr = model$coefficients[1] / 1 - model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] / 1 - model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
grid()
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] / 1 - model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
curve(expr = model$coefficients[1] / 1 - model$coefficients[2] * cos(x * pi / 180), add = TRUE, col = "violet",lwd = 2)
plot(data, xlab = 'x', ylab = 't')
curve(expr = model$coefficients[1] / (1 - model$coefficients[2] * cos(x * pi / 180)),
add = TRUE, col = "violet",lwd = 2)
plot(data, xlab = 'x', ylab = 't')
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
grid()
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
p
p <- model$coefficients[1]
e <- model$coefficients[2]
plot(data, xlab = 'phi', ylab = 'r')
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to to = 3)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to= 3)
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 0, 100),
nrow = N, byrow = TRUE)
plot(data, xlab = 'phi', ylab = 'r')
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to= 3)
plot(data, xlab = 'phi', ylab = 'r')
data <- matrix(c(2.70, 48, 2.00, 67, 1.61, 83, 1.20, 108, 1.02, 126),
nrow = N, byrow = TRUE)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
p
e
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
plot(data, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
grid()
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * 3.14 / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
plot(model)
P
p
e
ginv(Phi)
ginv(Phi) * data[,2]
ginv(Phi) %*% phi
PhI
PhI
Phi
ginv(Phi) %*% phi
ginv(Phi) %*% data[,2]
ginv(Phi) %*% phi
ginv(Phi, tol = sqrt(.Machine$double.eps)) %*% phi
phi
ginv(Phi, tol = sqrt(.Machine$double.eps)) %*% phi
ginv(Phi, tol = sqrt(.Machine$double.eps)) %*% r
ginv(Phi, tol = sqrt(.Machine$double.eps)) %*% r
curve(expr = 1.454055 / (1 - 0.6944614*cos(phi * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
plot(data, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(phi * pi / 180)), add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
plot(data, xlab = 'phi', ylab = 'r')
orbit <- function(phi) 1.454055 / (1 - 0.6944614*cos(phi * pi / 180))
curve(expr = orbit, add = TRUE, col = "violet",lwd = 2, from = 1, to = 3)
orbit <- function(phi) 1.454055 / (1 - 0.6944614*cos(phi * pi / 180))
plot(data, xlab = 'phi', ylab = 'r')
curve(expr = orbit, add = TRUE, col = "violet",lwd = 2)
plot(data, xlab = 'phi', ylab = 'r')
plot(cbind(data[,2], data[,1]), xlab = 'phi', ylab = 'r')
curve(expr = orbit, add = TRUE, col = "violet",lwd = 2)
plot(cbind(data[,2], data[,1]), xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",lwd = 2)
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 50, to = 130)
plot(cbind(data[,2], data[,1]), xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 50, to = 130)
plot(cbind(data[,2], data[,1]), xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
p <- model$coefficients[1]
e <- model$coefficients[2]
data.plot <- cbind(phi, r)
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
grid()
data.plot <- cbind(r, phi)
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
data.plot <- cbind(phi, r)
plot(data.plot, xlab = 'phi', ylab = 'r')
p <- model$coefficients[1]
e <- model$coefficients[2]
data.plot <- cbind(phi, r)
plot(data.plot, xlab = 'phi', ylab = 'r')
data.plot <- matrix(c(phi, r), nrow = N)
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
grid()
data.plot <- matrix(c(phi, r), nrow = N)
data.plot
data.plot <- matrix(c(data[,2], r), nrow = N)
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
data.plot <- cbind(data[,2], r)
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = 1.454055 / (1 - 0.6944614*cos(x * pi / 180)), add = TRUE, col = "violet",
lwd = 2, from = 40, to = 130)
grid()
plot(data.plot, xlab = 'phi', ylab = 'r')
curve(expr = p / (1 - e*cos(x * pi / 180)), add = TRUE,
col = "violet", lwd = 2, from = 40, to = 130)
grid()
h
rm
rm .RData
setwd("~/Dropbox/FIB/APA/Laboratori/lab4")
i <- sqrt(as.complex(-1))
ii
i
i <- sqrt(as.complex(-1))
(A <- matrix(c(0,i,0,1),nrow=2,byrow = TRUE))
View(A)
View(A)
(A %*% t(A))  # A·A^T és la matriu (-1 i; i 1)
(t(A) %*% A)  # A^T·A és la matriu tot zeros
N <- 10
(X <- matrix(c(rep(1,N), seq(N)),nrow=N))
t <- seq(10,20,length.out=N) + rnorm(N)
plot(X[,2],t,lwd=3)
(C <- t(X) %*% X)  # X^T X
(X.pseudo <- solve(C) %*% t(X))  # (X^T X)^{-1} X^T
(X.pseudo %*% X) # és pseudo-inversa esquerra d'X
(w <- X.pseudo %*% t) # solució del problema
lines (X[,2], w[2,1]*X[,2]+w[1,1], type="l")
(s <- svd(X))
